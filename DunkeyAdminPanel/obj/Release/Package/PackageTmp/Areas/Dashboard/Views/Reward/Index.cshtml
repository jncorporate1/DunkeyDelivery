@model BasketWebPanel.ViewModels.AddRewardViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="right_col" role="main">
    <div class="row">
        <input id="rewardIds" type="hidden" name="Reward.Id" value="@Model.Rewards.Id" />
        <input id="rewardPrizeIds" type="hidden" name="Reward.RewardPrize_Id" value="@Model.Rewards.RewardPrize_Id" />

        <div class="col-md-12 col-xs-12">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success" id="success-alert">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <strong></strong><span>@TempData["SuccessMessage"]</span>
                </div>
            }
            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong> <span> </span>
            </div>
            <div class="x_panel">
                <div class="x_title">
                    @if (Model.Rewards.Id == 0)
                    {
                        <h2>Add New Reward</h2>
                    }
                    else
                    {
                        <h2>Edit Reward</h2>
                    }
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <style>
                        input[type=number]::-webkit-inner-spin-button,
                        input[type=number]::-webkit-outer-spin-button {
                            -webkit-appearance: none;
                            -moz-appearance: none;
                            appearance: none;
                            margin: 0;
                        }

                        #RewardDescription {
                            min-width: 500px;
                            max-width: 500px;
                        }
                    </style>
                    @using (Ajax.BeginForm("Index", "Reward", new AjaxOptions { OnSuccess = "OnUserSuccessInsertion", OnFailure = "OnFailedInsertion", LoadingElementId = "divLoader" }))

                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Rewards.Id)
                        <div class="row form-group">
                            <div class="col-md-6 col-xs-6 form-group">
                                <label>Required Points</label>
                                @Html.TextBoxFor(x => x.Rewards.PointsRequired, new { @autofocus = "", @class = "form-control", id = "RequiredPoints", @placeholder = "Required Points" })
                                @Html.ValidationMessageFor(m => m.Rewards.PointsRequired, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 col-xs-6 form-group">
                                <label>Reward Type</label>


                                @if (!string.IsNullOrEmpty(Model.Rewards.RewardPrizes.Name))
                                {
                                    <select id="RewardType" name="Rewards.Type" class="form-control" disabled>
                                        <option>Gift</option>
                                    </select>
                                }
                                else if (Model.Rewards.AmountAward != 0)
                                {

                                    <select id="RewardType" name="Rewards.Type" class="form-control" disabled>
                                        <option>Amount</option>
                                    </select>
                                }
                                else
                                {

                                    <select id="RewardType" name="Rewards.Type" class="form-control" onchange="ShowFields()">
                                        <option id="RT_11" value="">None</option>
                                        <option id="RT_0" value="0">Amount</option>
                                        <option id="RT_1" value="1">Gift</option>
                                        @Html.TextBoxFor(x => x.Rewards.Type, new { @autofocus = "", @class = "form-control", id = "Type", @placeholder = "Required Points", Style = "Display:none;" })
                                        @Html.ValidationMessageFor(m => m.Rewards.Type, "", new { @class = "text-danger" })
                                        @* 0 for amount 1 for Gift*@
                                    </select>
                                }

                            </div>
                        </div>

                        <div class="row form-group" id="AmountMainDiv" hidden>
                            <div class="col-md-6 col-xs-6 form-group">
                                <label>Reward Amount</label>
                                @Html.TextBoxFor(x => x.Rewards.AmountAward, new { @class = "form-control", id = "RewardAmount", @placeholder = "Reward Amount" })
                                @Html.ValidationMessageFor(m => m.Rewards.AmountAward, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 col-xs-6 form-group">
                                <label>Description</label>
                                @Html.TextAreaFor(x => x.Rewards.Description, new { @class = "form-control", id = "RewardDescription", @placeholder = "Reward Description" })
                                @Html.ValidationMessageFor(m => m.Rewards.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="row form-group" id="GiftMainDiv" hidden>
                            <div class="col-md-6 col-xs-6 form-group">
                                <label>Name</label>
                                @Html.TextBoxFor(x => x.Rewards.RewardPrizes.Name, new { @class = "form-control", id = "GiftName", @placeholder = "Gift Name" })
                                @Html.ValidationMessageFor(m => m.Rewards.RewardPrizes.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 col-xs-6 form-group">
                                <div class="">
                                    <div id="UploadImage" hidden>
                                        <label>Upload Gift Image</label>
                                        <div class="input-group image-preview" style="margin-bottom:0px">
                                            <input type="text" class="form-control image-preview-filename" name="Rewards.RewardPrize.ImageUrl" id="txtImageUrl" readonly> <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn">
                                                <!-- image-preview-clear button -->
                                                <button type="button" id="clearImage" class="btn btn-default image-preview-clear" onclick="ClearImage()" style="display:none;">
                                                    <span class="glyphicon glyphicon-remove"></span> Clear
                                                </button>
                                                <!-- image-preview-input -->
                                                <div class="btn btn-default image-preview-input">
                                                    <span class="glyphicon glyphicon-folder-open"></span>
                                                    <span class="image-preview-input-title">Browse</span>
                                                    <input type="file" accept="image/png, image/jpeg, image/gif" onchange="UploadImage()" id="fileInput" name="Image" /> <!-- rename it -->
                                                </div>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.Rewards.RewardPrizes.ImageUrl, "", new { @class = "text-danger", @Id = "errImageUrl" })
                                        <!-- /input-group image-preview [TO HERE]-->
                                    </div>
                                    <div id="EditImage" hidden>
                                        <label>Gift Image</label>
                                        <div class="row">
                                            <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                                <img src="@ApiCall.BaseUrl@Model.Rewards.RewardPrizes.ImageUrl" alt="" width="48" height="48">
                                            </div>
                                        </div>
                                        <button id="btnDeleteImg" title="Delete" onclick="EditDivDeletePic()" class="btn btn-danger btn-xs deleteButtons" data-title="Delete" data-productid="8" data-toggle="modal" data-target="#deleteModal"><span class="glyphicon glyphicon-trash"></span></button>
                                    </div>
                                    <div hidden id="HasImage1">@Model.Rewards.RewardPrizes.ImageUrl</div>

                                </div>
                                @*<span style="padding-left:10px" id="ImageError" class="text-danger"></span>*@

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12 text-right" style="margin-top:20px;">
                                <button id="btnReset" onclick="ClearValidationErrorMessages()" class="btn btn-primary" type="reset">Reset</button>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/intlTelInput.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/utils.js"></script>
<script>
    $("#RequiredPoints,#RewardAmount").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }

    });
    function ShowFields() {
        switch ($("#RewardType").find(":selected").val()) {
            case "0":
                $("#Type").val($("#RewardType").find(":selected").val());
                $("#GiftMainDiv").hide();
                $("#AmountMainDiv").show();
                break;
            case "1":
                $("#Type").val($("#RewardType").find(":selected").val());
                $("#GiftMainDiv").show();
                $("#AmountMainDiv").hide();
                break;
            default:
                $("#Type").val("");
                $("#GiftMainDiv").hide();
                $("#AmountMainDiv").hide();
                break;

        }
    }

    $(document).ready(function () {

        var AmountCheck=@Model.Rewards.AmountAward;
        var GiftCheck='@Model.Rewards.RewardPrizes.ImageUrl';
        debugger;
        if((AmountCheck==0 && GiftCheck==null) || (AmountCheck==0 && GiftCheck=="")){
            $("#AmountMainDiv").hide();
            $("#GiftMainDiv").hide();
        }else if(AmountCheck==0){
            $("#GiftMainDiv").show();
            $("#AmountMainDiv").hide();
        }else{
            $("#GiftMainDiv").hide();
            $("#AmountMainDiv").show();
        }


        $("#Type").val("");
        setTimeout(
function () {
    if ($('#success-alert') != null) {
        $('#success-alert').slideUp(500, function () {
        });
    }
}, 3000);

        var rewardId = $("#rewardId").val();
        var editImageVal = $('#HasImage1').text();
        if (rewardId == "" || editImageVal == "") {
            $('#EditImage').hide();
            $('#UploadImage').show();
        }
        else {
            $('#EditImage').show();
            $('#UploadImage').hide();
            $("#txtImageUrl").val(editImageVal);
        }

        $("#PhoneNumber").keydown(function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode == 43)) {
                e.preventDefault();
            }
        });

        $("#PhoneNumber").bind("cut copy paste", function (e) {
            e.preventDefault();
        });

    });

    $(function () {
        $("#PhoneNumber").intlTelInput({
            allowExtensions: true,
            autoFormat: true,
            autoHideDialCode: false,
            autoPlaceholder: false,
            defaultCountry: "auto",
            ipinfoToken: "yolo",
            nationalMode: false,
            numberType: "MOBILE",
            preventInvalidNumbers: true
            //utilsScript: "../Content/intl-tel-input-master/build/js/utils.js"
        });
    });

    function OnUserSuccessInsertion() {
        if ($('#hdnRole').val() == "SubAdmin") {
            $("#success-alert span").text("The reward has been updated successfully.");

            window.location.href = "@Url.Action("Index", "Reward")";
            //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
            //    $("#success-alert").slideUp(500);
            //});
        }
        else {
            window.location.href = "@Url.Action("ManageReward", "Reward")";
        }
        @*$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
            $("#success-alert").slideUp(500, function () {
                if ($("#adminIds").val() > 0) {
                    if ($('#hdnRole').val() == "SuperAdmin") {
                        window.location.href = "@Url.Action("ManageAdmins", "Admin")";
                    }
                }
            });
        });

        if ($('#hdnRole').val() == "SubAdmin") {
            window.location.href = "@Url.Action("Index", "Admin")";
        }

        $("#FirstName").val('');
        $("#LastName").val('');
        $("#Email").val('');
        $("#PhoneNumber").val('');
        $("#Password").val('');
        $("#ConfirmPassword").val('');
        $("#SignInType").val('2');
        $("#clearImage").trigger("click");
        $("#EditImage").hide();
        $("#UploadImage").show();*@

    }

    jQuery('.numbersOnly').keypress(function () {
        return (event.charCode == 43 || (event.charCode >= 48 && event.charCode <= 57));
    });

    function UploadImage() {
        var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        //Iterating through each files selected in fileInput
        var file = fileInput.files[0];
        formdata.append(file.name, file);
        if (AllowedFileTypes.indexOf(file.type) == -1) {
            $("#ImageError").text("Only .Jpeg & .Png files are allowed.");
            $("#clearImage").trigger("click");
            return false;
        }
        else {
            $("#ImageError").text("");
            var xhr = new XMLHttpRequest();
            xhr.open('POST', 'Reward/UploadImage');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    document.getElementById("errImageUrl").innerHTML = '';
                }
            }
            return false;
        }
    }

    function ClearImage() {
        var xhr = new XMLHttpRequest();
        xhr.open('POST', 'Reward/DeleteImage');
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }

    function DeleteImageOnEdit() {
        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("DeleteImage", "Reward")'
        xhr.open('POST', url);
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }



    function EditDivDeletePic() {
        $('#EditImage').hide();
        $('#UploadImage').show();
        DeleteImageOnEdit();
    }
</script>


