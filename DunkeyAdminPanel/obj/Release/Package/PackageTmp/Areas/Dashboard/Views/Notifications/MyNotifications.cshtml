@model BasketWebPanel.ViewModels.MyNotificationsViewModel
@{
    ViewBag.Title = "MyNotifications";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .table caption + thead tr:first-child th,
    .table colgroup + thead tr:first-child th,
    .table thead:first-child tr:first-child th,
    .table caption + thead tr:first-child td,
    .table colgroup + thead tr:first-child td,
    .table thead:first-child tr:first-child td {
        border-top: 0;
        text-align: center;
    }
</style>

<div class="right_col" role="main">
    <div class="row">
        <div class="x_panel ">
            <div hidden class="alert alert-success" id="success-alert">
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong></strong><span></span>
            </div>
            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong> <span> </span>
            </div>

            @*/////GridView*@

            <div class="">
                <div class="title_right">
                    <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="x_content">
                            <div class="table-responsive" style="overflow-x:auto; overflow-y:hidden">
                                <table id="datatable" class="table table-striped table-bordered" style="table-layout: auto; text-align:center;">
                                    <thead>
                                        <tr>
                                            <th style="vertical-align:middle">ID</th>
                                            <th style="vertical-align:middle">Title</th>
                                            <th style="vertical-align:middle">Text</th>
                                            <th style="vertical-align:middle">Created Date</th>
                                            <th style="vertical-align:middle">Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Notifications.Count; i++)
                                        {
                                            <tr>
                                                <td style="vertical-align:middle">@Model.Notifications[i].Id</td>
                                                <td style="vertical-align:middle">@Model.Notifications[i].Title</td>
                                                <td style="vertical-align:middle">@Model.Notifications[i].Text</td>
                                                <td style="vertical-align:middle">@Model.Notifications[i].CreatedDate</td>
                                                @if (@Model.Notifications[i].Status == 0) //Unread
                                                {
                                                    <td style="vertical-align:middle">
                                                        <button data-notificationid="@Model.Notifications[i].Id" onclick="MarkNotificationAsRead(@i, this.getAttribute('data-notificationid'))" id="btnMarkRead_@i" class="btn btn-success">Mark as read</button>
                                                        <span style="display:none" id="lblStatus_@i">Read</span>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="vertical-align:middle"><span id="lblStatus_@i">Read</span></td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
<script>
    $(document).ready(function () {
        setTimeout(
            function () {
                if ($('#success-alert') != null) {
                    $('#success-alert').slideUp(500, function () {
                    });
                }
            }, 3000);

        $('#datatable').DataTable({
            "pagingType": "full_numbers",
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: [1, 2]
            }],
            "order": [[0, "desc"]]
        });
    });

    function MarkNotificationAsRead(index, notificationId) {
        $.ajax({
            type: "Get",
            url: '@Url.Action("MarkNotificationAsRead", "Notifications", new { area = "Dashboard"})',
            data: { NotificationId: notificationId },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                OnFailedInsertion(XMLHttpRequest, textStatus, errorThrown)
            },
            success: function (data) {
                var NotificationBadge = $('#spanNotificationBadgeCount');
                NotificationBadge.text(data.UnreadNotificationCount);
                if (NotificationBadge.text() == "0") {
                    NotificationBadge.hide();
                }
                else {
                    NotificationBadge.show();
                }
                $('#btnMarkRead_' + index).hide();
                $('#lblStatus_' + index).show();
            }
        });

    }
</script>
