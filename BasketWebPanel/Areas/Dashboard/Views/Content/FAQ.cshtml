@model BasketWebPanel.BindingModels.FAQBindingModel
@{
    ViewBag.Title = "FAQ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #Answer{
        margin: 0px -518.5px 0px 0px;
        min-width:1023px;
        min-height:74px;
        max-width: 1023px;
        max-height: 74px;
    }
</style>
<div class="right_col" role="main">
    <div class="row">
        <input id="adminIds" type="hidden" name="Admin.Id" value="" />
        <div class="col-md-12 col-xs-12">
            @*@if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success" id="success-alert">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <strong></strong><span>@TempData["SuccessMessage"]</span>
                </div>
            }*@
            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong> <span> </span>
            </div>
            <div class="x_panel">
                <div class="x_title">
                    @if (Model.Id == 0)
                    {
                        <h2>Add New FAQ</h2>
                    }
                    else
                    {
                        <h2>Edit FAQ</h2>
                    }
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">

                    <input type="hidden" id="hdnRole" value="">
                    <style>
                        input[type=number]::-webkit-inner-spin-button,
                        input[type=number]::-webkit-outer-spin-button {
                            -webkit-appearance: none;
                            -moz-appearance: none;
                            appearance: none;
                            margin: 0;
                        }
                    </style>
                    @using (Ajax.BeginForm("FAQ", "Content",FormMethod.Post, new AjaxOptions { OnSuccess = "OnUserSuccessInsertion", OnFailure = "OnFailedInsertion", LoadingElementId = "divLoader" }))

                    {
                        @Html.AntiForgeryToken()
                        @*@Html.HiddenFor(x => x.Admin.Id)*@
                        <div class="row">
                            <div class="col-md-6 col-xs-6">
                                <label>Type</label>
                                
                                @if (string.IsNullOrEmpty(Model.Type))
                                {
                                    <select name="Type" class="form-control">
                                        <option value="General" selected>General</option>
                                        <option value="Food">Food</option>
                                        <option value="Grocery">Grocery</option>
                                        <option value="Laundry">Laundry</option>
                                        <option value="Alcohol">Alcohol</option>
                                        <option value="Pharmacy">Pharmacy</option>
                                        <option value="Retail">Retail</option>
                                    </select>
                                }
                                else
                                {
                                    <input type="text" class="form-control" name="Type" value="@Model.Type" readonly />
                                }
                                
                            </div>
                            <div class="col-md-6 col-xs-6">
                                <label>Question</label>
                                @Html.TextBoxFor(x => x.Question, new { @autofocus = "", @class = "form-control", id = "Question", @placeholder = "Question",@Value=Model.Question })
                                @Html.ValidationMessageFor(m => m.Question, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 col-xs-6">
                                <label>Answer</label>
                                @Html.TextAreaFor(x => x.Answer, new { @class = "form-control", id = "Answer", @placeholder = "Answer", @Value = Model.Answer })
                                @Html.ValidationMessageFor(m => m.Answer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                  
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12 text-right" style="margin-top:20px;">
                                <button id="btnReset" onclick="ClearValidationErrorMessages()" class="btn btn-primary" type="reset">Reset</button>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/intlTelInput.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/utils.js"></script>
<script>
    $(document).ready(function () {
        setTimeout(
function () {
    if ($('#success-alert') != null) {
        $('#success-alert').slideUp(500, function () {
        });
    }
}, 3000);

        var adminId = $("#adminId").val();
        var editImageVal = $('#HasImage1').text();
        if (adminId == "" || editImageVal == "") {
            $('#EditImage').hide();
            $('#UploadImage').show();
        }
        else {
            $('#EditImage').show();
            $('#UploadImage').hide();
            $("#txtImageUrl").val(editImageVal);
        }

        $("#PhoneNumber").keydown(function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode == 43)) {
                e.preventDefault();
            }
        });

        $("#PhoneNumber").bind("cut copy paste", function (e) {
            e.preventDefault();
        });

    });

    $(function () {
        $("#PhoneNumber").intlTelInput({
            allowExtensions: true,
            autoFormat: true,
            autoHideDialCode: false,
            autoPlaceholder: false,
            defaultCountry: "auto",
            ipinfoToken: "yolo",
            nationalMode: false,
            numberType: "MOBILE",
            preventInvalidNumbers: true
            //utilsScript: "../Content/intl-tel-input-master/build/js/utils.js"
        });
    });

    function OnUserSuccessInsertion() {
        if ($('#hdnRole').val() == "SubAdmin") {
            $("#success-alert span").text("Data updated successfully.");

            window.location.href = "@Url.Action("ManageFAQ", "Content")";
            //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
            //    $("#success-alert").slideUp(500);
            //});
        }
        else {
            window.location.href = "@Url.Action("ManageFAQ", "Content")";
        }
        @*$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
            $("#success-alert").slideUp(500, function () {
                if ($("#adminIds").val() > 0) {
                    if ($('#hdnRole').val() == "SuperAdmin") {
                        window.location.href = "@Url.Action("ManageAdmins", "Admin")";
                    }
                }
            });
        });

        if ($('#hdnRole').val() == "SubAdmin") {
            window.location.href = "@Url.Action("Index", "Admin")";
        }

        $("#FirstName").val('');
        $("#LastName").val('');
        $("#Email").val('');
        $("#PhoneNumber").val('');
        $("#Password").val('');
        $("#ConfirmPassword").val('');
        $("#SignInType").val('2');
        $("#clearImage").trigger("click");
        $("#EditImage").hide();
        $("#UploadImage").show();*@

    }

    jQuery('.numbersOnly').keypress(function () {
        return (event.charCode == 43 || (event.charCode >= 48 && event.charCode <= 57));
    });

    function UploadImage() {
        var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        //Iterating through each files selected in fileInput
        var file = fileInput.files[0];
        formdata.append(file.name, file);
        if (AllowedFileTypes.indexOf(file.type) == -1) {
            $("#ImageError").text("Only .Jpeg & .Png files are allowed.");
            $("#clearImage").trigger("click");
            return false;
        }
        else {
            $("#ImageError").text("");
            var xhr = new XMLHttpRequest();
            xhr.open('POST', 'Admin/UploadImage');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    document.getElementById("errImageUrl").innerHTML = '';
                }
            }
            return false;
        }
    }

    function ClearImage() {
        var xhr = new XMLHttpRequest();
        xhr.open('POST', 'Admin/DeleteImage');
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }

    function DeleteImageOnEdit() {
        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("DeleteImage", "Admin")'
        xhr.open('POST', url);
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }



    function EditDivDeletePic() {
        $('#EditImage').hide();
        $('#UploadImage').show();
        DeleteImageOnEdit();
    }
</script>
