@model BasketWebPanel.ViewModels.UserBindingModel

@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="right_col" role="main">
    <div class="row">
        @using (Ajax.BeginForm("SaveUserProfile", "Users", new AjaxOptions { OnSuccess = "OnSuccessUserProfileInsertion", OnFailure = "OnFailedInsertion", LoadingElementId = "divLoader" }))
        {
            @Html.AntiForgeryToken()
            <div class="x_panel">
                <div class="x_title">
                    <h3>User Profile</h3>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                            <label>Profile Picture</label>
                            <div class="row">
                                <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                    <img src="@ApiCall.BaseUrl@Model.ProfilePictureUrl" alt="" width="48" height="48">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                            <label>Full Name</label>
                            <input type="text" readonly autofocus data-val="true" class="form-control input-validation-error" name="FullName" id="txtFullName" data-val-required="This field is required" placeholder="Full Name" value="@Model.FullName">
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                            <label>Phone Number</label>
                            <input readonly type="tel" data-val="true" data-val-required="Phone Number is required" class="form-control input-validation-error numbersOnly" maxlength="15" name="Phone" id="PhoneNumber" data-val-length="Phone Number length should be at least 10 digits" data-val-length-max="15" data-val-length-min="10" data-val-required="Phone Number is required" placeholder="Phone Number" value="@Model.Phone">
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                            <label>Email</label>
                            <input readonly type="text" autofocus data-val="true" class="form-control input-validation-error" name="Email" id="txtEmail" data-val-required="This field is required" placeholder="Email" value="@Model.Email">
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div id="accordion" role="tablist" class="row" aria-multiselectable="true">
                        <div class="card">
                            <div class="card-header col-md-12 col-sm-12 col-xs-12 form-group has-feedback" role="tab" id="headingOne">
                                <h5 class="mb-0">
                                    <a data-toggle="collapse" data-parent="#accordion" href="#divUserAddresses" aria-expanded="false" aria-controls="collapseOne">
                                        User Addresses (@Model.UserAddresses.Count)
                                    </a>
                                </h5>
                            </div>
                            @if (Model.UserAddresses.Count > 0)
                            {
                                <div id="divUserAddresses" class="collapse col-md-12 col-sm-12 col-xs-12 form-group has-feedback">
                                    @for (int i = 0; i < Model.UserAddresses.Count; i++)
                                    {
                                        <div class="card-body col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                            <div class="clearfix"></div>
                                            <textarea disabled style="width:100%" cols="20" rows="2" class="valid">@Model.UserAddresses[i].BuildingName, @Model.UserAddresses[i].StreetName, @Model.UserAddresses[i].NearestLandmark, @Model.UserAddresses[i].City, @Model.UserAddresses[i].Country</textarea>
                                        </div>

                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div id="accordion" role="tablist" class="row" aria-multiselectable="true">
                        <div class="card">
                            <div class="card-header col-md-12 col-sm-12 col-xs-12 form-group has-feedback" role="tab" id="headingOne">
                                <h5 class="mb-0">
                                    <a data-toggle="collapse" data-parent="#accordion" href="#divPaymentCards" aria-expanded="false" aria-controls="collapseOne">
                                        Payment Cards (@Model.PaymentCards.Count)
                                    </a>
                                </h5>
                            </div>
                            <input id="hdnPaymentCardCount" type="hidden" value="@Model.PaymentCards.Count" />
                            @if (Model.PaymentCards.Count > 0)
                            {
                                <div id="divPaymentCards" class="collapse col-md-12 col-sm-12 col-xs-12 form-group has-feedback">
                                    @for (int i = 0; i < Model.PaymentCards.Count; i++)
                                    {
                                        <div class="card-body col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                            <div class="clearfix"></div>
                                            <input style="width:100%" id="txtPaymentCards_@i" readonly type="text" autofocus data-val="true" class="form-control input-validation-error" name="Email" data-val-required="This field is required" placeholder="Payment Card" value="@Model.PaymentCards[i].CardNumber">
                                        </div>
                                    }
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>

        }
    </div>

    <div>
        @Html.ActionLink("Back to List", "ManageUsers")
    </div>
</div>
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/intlTelInput.js"></script>
<script src="~/Content/intl-tel-input-master/build/js/utils.js"></script>
<script>
    $(document).ready(function () {
        $(function () {
            $("#PhoneNumber").intlTelInput({
                allowExtensions: true,
                autoFormat: true,
                autoHideDialCode: false,
                autoPlaceholder: false,
                defaultCountry: "auto",
                ipinfoToken: "yolo",
                nationalMode: false,
                numberType: "MOBILE",
                preventInvalidNumbers: true
                //utilsScript: "../Content/intl-tel-input-master/build/js/utils.js"
            });
        });

        var paymentCardsCount = $("#hdnPaymentCardCount").val();
        if (paymentCardsCount > 0) {
            for (var i = 0; i < paymentCardsCount; i++) {
                $("#txtPaymentCards_" + i).val($("#txtPaymentCards_" + i).val().replace(/\d(?=\d{4})/g, "*"));
            }
        }
        //mask credit card number and see only last 4 digits

        //str = str.replace(/\d(?=\d{4})/g, "*");
    })
</script>
