@model DunkeyDelivery.Areas.User.Models.CategoryProductViewModel

@{

    ViewBag.Title = "Store Details";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
    var StyleClass = "";
    var StyleCss = "";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<div class="top-banner product-detail-banner">
    <img src="~/Content/assets/images/grocery-details-banner.png" class="img img-responsive" />
    <div class="banner-inner-text" />
    <img src="@Utility.BaseUrl@Model.shopViewModel.ImageUrl" class="logo-img common-logo-height" />
    <div class="row">
        @for (var i = 1; i <= 5; i++)
        {
            if (Model.shopViewModel.AverageRating == 0)
            {
                <span><i class="icon fa fa fa-star-o"></i></span>
            }
            else if (i - Model.shopViewModel.AverageRating <= 0)
            {
                <span><i class="icon fa fa-star"></i></span>
                // rating
            }
            else if (i - Model.shopViewModel.AverageRating < 1)
            {
                <span><i class="icon fa fa-star-half-full"></i></span>
                // half rating
            }
            else
            {
                <span><i class="icon fa fa-star-o"></i></span>
                // no rating
            }
        }
    </div>
    <h1 class="product-heading-banner">@Model.shopViewModel.BusinessName</h1>

    <p class="banner-inner-data">@Model.shopViewModel.Address </p>
    <p class="banner-inner-data">Min $@Model.shopViewModel.MinOrderPrice | Estimated time @Model.shopViewModel.MinDeliveryTime min</p>
</div>
</div>
<div class="current-menu-paths">
    <div class="container">
        <p> Home > Restaurants   > @Model.shopViewModel.BusinessName </p>
    </div>
</div>

<div class="main-section product-detail-main alcohol-details-main">

    <div class="container">
        <div class="row">
            <div class="col-md-9" style="margin-top: 30px;padding-bottom: 30px;">
                <ul class="tabs-list clearfix">
                    <li>
                        <button class="tab-btn tablinks" onclick="openCity(event, 'London')" id="defaultOpen">Menu</button>
                    </li>
                    <li>
                        <button class="tab-btn tablinks" onclick="openCity(event, 'paris')">Reviews</button>
                    </li>
                    <li>
                        <button class="tab-btn tablinks" id="info-tab" onclick="openCity(event, 'newyork')">Info</button>
                    </li>
                </ul>

                <!-- TAB CONTENT -->

                <div class="tab1 tabcontent" id="London">
                    <div class="row">
                        <div class="col-md-4 tab1-left">
                            <ul class="menu-list" id="categoriesList">
                                @if (Model.Categories.Count() < 1)
                                {
                                    <li><a href="#">No Category Found </a></li>
                                }
                                @foreach (var category in Model.Categories)
                                {

                                    if (Model.Categories.First() == category)
                                    {
                                        <li class="active" id="item_@category.Id">
                                            @Ajax.ActionLink(@category.Name, "GetCategoryProducts", new { Area = "User", BusinessTypeTax = Model.shopViewModel.BusinessTypeTax, BusinessType = Model.shopViewModel.BusinessType, Category_Id = @category.Id }, new AjaxOptions()
                                       {

                                           HttpMethod = "GET",
                                           AllowCache = false,
                                           InsertionMode = InsertionMode.Replace,
                                           UpdateTargetId = "posts-wrapper",
                                           OnBegin = "ClearProductDiv()",
                                           OnSuccess = "SetCategory('" + @category.Id + "','" + @category.Name + "')"
                                       })
                                        </li>
                                    }
                                    else
                                    {

                                        <li id="item_@category.Id">
                                            @Ajax.ActionLink(@category.Name, "GetCategoryProducts", new { Area = "User", BusinessTypeTax = Model.shopViewModel.BusinessTypeTax, BusinessType = Model.shopViewModel.BusinessType, Category_Id = @category.Id }, new AjaxOptions()
                                       {

                                           HttpMethod = "GET",
                                           AllowCache = false,
                                           InsertionMode = InsertionMode.Replace,
                                           UpdateTargetId = "posts-wrapper",
                                           OnBegin = "ClearProductDiv()",
                                           OnSuccess = "SetCategory('" + @category.Id + "','" + @category.Name + "')"
                                       })
                                        </li>
                                    }

                                }

                            </ul>
                        </div>

                        <div id="posts-wrapper">

                        </div>

                        @*@{
                                Html.RenderAction("GetCategoryProducts", "UserStore", new { Store_id = @ViewBag.StoreDetails.Id, Category_Id = @Model.Categories.First().Id });
                            }*@


                    </div>
                </div>
                <div class="tab1 tabcontent" id="paris">
                    <div class="reviews-main clearfix reviews-tab">
                        <h4>Reviews</h4>

                        @if (Model.ReviewForView.Reviews.Count == 0)
                        {
                            <p class="based-on">
                                There are no reviews yet
                            </p>
                        }
                        else
                        {
                            foreach (var review in Model.ReviewForView.Reviews)
                            {
                                <div class="row review-row">
                                    <p><i>@review.User.FullName</i></p>
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <span><i class="icon fa fa-star custom-size"></i></span>

                                        }
                                        else
                                        {
                                            <span><i class="icon fa fa-star-o custom-size"></i></span>
                                        }
                                    }
                                    <p class="review-feedback">@review.Feedback</p>
                                </div>
                            }

                        }

                        <div class="row" style="padding-left: 29px;margin-top: 27px !important;">
                            <h3 style="padding: 10px 0px;">Write a review</h3>
                            <label class="zama-label">Rating</label>
                            <span><i class="icon fa fa-star-o custom-size" id="0" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="1" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="2" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="3" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="4" onclick="fillStar(this.id)"></i></span>
                            <br /><br />
                            @using (Ajax.BeginForm("SubmitReview", "UserStore", new AjaxOptions { OnSuccess = "ReviewSuccess", OnFailure = "ReviewFailed" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="text" name="UserReview.User_Id" value="@Model.Id" hidden />
                                <input type="text" name="UserReview.Store_Id" value="@Model.shopViewModel.Id" hidden />
                                <input type="text" name="UserReview.Rating" id="Rating" value="" hidden />
                                <label class="zama-label" style="margin-bottom:5px;">Your Review</label>
                                <textarea class="form-control" name="UserReview.Feedback" id="reviewArea"></textarea>
                                if (Model.Id != null)
                                {
                                    <input type="submit" class="btn btn-primary" value="Submit" style="float: right;margin-top: 10px;" />
                                }
                                else
                                {
                                    <input type="button" class="btn btn-primary" onclick="login_error()" value="Submit" style="float: right;margin-top: 10px;" />

                                }

                            }
                            <p style="display:none;" id="review_message"></p>
                        </div>
                        <ul>
                            @*<li>
                                    <img src="~/Content/assets/images/rating.png" />
                                    <p>
                                        By: Yisroel H on Jan 5, 2017 | 1 review written | 1 order placed<br>
                                        The Quality here outdid any of my local butchers. The meat was fresh, juicy, and so
                                        tasty it literally blew me away.
                                    </p>
                                </li>*@

                        </ul>
                    </div>
                </div>
                <div class="tab1 tabcontent" id="newyork">

                    @{
                        Html.RenderAction("StoreInfo", "UserStore", new { area = "User", Model });
                    }

                </div>







            </div>
            <div class="col-md-3" id="OrderItems">

                @{
                    Html.RenderAction("OrderItems", "Order", new { area = "User", MinOrder = Model.shopViewModel.MinOrderPrice });
                }
            </div>

            <div class="col-md-3" id="Cart" style="display:none">
                @{
                    Html.RenderAction("DeliveryTime", "Order", new { area = "User" });
                }

                @{
                    Html.RenderAction("Cart", "Order", new { area = "User" });
                }
            </div>


        </div>

        <style>
            #btn1 {
                width: 115px;
            }

            #btn2 {
                width: 115px;
            }

            #btn3 {
                width: 115px;
            }

            #btn4 {
                position: relative;
                padding: 10px;
                left: 25px;
                width: 75%;
            }


            .common {
                display: none;
            }

            .ui-timepicker-container {
                z-index: 10000 !important;
            }
        </style>
        @* Modal for asap later and today order *@
        <div class="container">
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
                <input type="hidden" id="HiddenProductId" value="" /> @*this id of product is used to generate click programatically on specific link for add to cart in case user selected delivery type*@
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Modal Header</h4>
                        </div>
                        <div class="modal-body">
                            <input type="hidden" id="HiddenProductId" value="" /> @*this id of product is used to generate click programatically on specific link for add to cart in case user selected delivery type*@
                            <div class="row ">
                                @if (Model.shopViewModel.StoreDeliveryTypes.Count == 1)
                                {
                                    StyleClass = "col-md-8 col-md-offset-2";
                                }
                                else if (Model.shopViewModel.StoreDeliveryTypes.Count == 2)
                                {
                                    StyleClass = "col-md-4 col-md-offset-1";
                                    StyleCss = "style=position:relative;left:30px;";

                                }
                                else
                                {
                                    StyleClass = "col-md-2 col-md-offset-1";
                                    StyleCss = "style=position:relative;left:32px;";

                                }
                                @foreach (var type in Model.shopViewModel.StoreDeliveryTypes)
                                {
                                    if (type.Type_Id == (int)Utility.DeliveryTypes.ASAP)
                                    {
                                        <button id="type_@type.Type_Id" onclick="SetDeliveryType(@type.Type_Id,@Model.shopViewModel.Id)" type="button" data-Type_Id="@type.Type_Id" class="btn btn-success @StyleClass" @StyleCss>
                                            @type.Type_Name
                                        </button>
                                    }
                                    else
                                    {
                                        <button id="type_@type.Type_Id" onclick="ShowDeliveryOptions(this.id)" type="button" data-Type_Id="@type.Type_Id" class="btn btn-success @StyleClass" @StyleCss>
                                            @type.Type_Name
                                        </button>
                                    }

                                }
                            </div>


                            <div class="row">
                                @foreach (var type in Model.shopViewModel.StoreDeliveryTypes)
                                {
                                    if (type.Type_Id == (int)Utility.DeliveryTypes.ASAP)
                                    {
                                        <div class="DeliveryAsap common row" id="Id_@type.Type_Id">
                                            <budtton id="btn4" type="button" onclick="SetDeliveryType(@type.Type_Id,@Model.shopViewModel.Id)"
                                                     class="btn btn-success col-md-4">
                                                Delivery ASAP
                                            </budtton>
                                            <input type="hidden" value="@Model.shopViewModel.MinDeliveryTime" id="AsapTime" />
                                        </div>
                                    }
                                    else if (type.Type_Id == (int)Utility.DeliveryTypes.Today)
                                    {
                                        <div class="DeliveryToday common" id="Id_@type.Type_Id">

                                            <div class="col-md-9 col-sm-12 col-md-offset-1" style="margin-top: 16px;margin-bottom: 25px;padding-left: 41px;">
                                                <label class="control-label" for="OpeningTime" title="">Select Order Time</label>
                                                <div class='input-group date'>
                                                    <input type='text' class="form-control " id="timepicker1" name="Store.Open_From" value="" />
                                                    <span class="input-group-addon open-timepicker1">
                                                        <span class="glyphicon glyphicon-time "></span>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="col-md-11 col-md-offset-1">
                                                <budtton id="btn4" type="button" onclick="SetDeliveryType(@type.Type_Id,@Model.shopViewModel.Id)"
                                                         class="btn btn-success col-md-4 ">
                                                    Delivery Today
                                                </budtton>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {

                                        <div class="DeliveryLater common" id="Id_@type.Type_Id">
                                            <div class="row" style="margin-top: 16px;margin-bottom: 25px;padding-left: 60px;">
                                                <div class="col-md-6 col-sm-12" style="padding-left: 35px;
">
                                                    <label class="control-label" for="OpeningTime" title="">Select Order Date</label>
                                                    <div class="form-group">
                                                        <div class='input-group date' id='datetimepicker'>
                                                            <input type='text' class="form-control" />
                                                            <span class="input-group-addon">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6 col-sm-12" style="padding-right: 85px;">
                                                    <label class="control-label" for="OpeningTime" title="">Select Order Time</label>
                                                    <div class='input-group date'>
                                                        <input type='text' class="form-control " id="timepicker2" name="Store.Open_From" value="" />
                                                        <span class="input-group-addon open-timepicker2">
                                                            <span class="glyphicon glyphicon-time "></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-md-offset-1">
                                                <budtton id="btn4" type="button" onclick="SetDeliveryType(@type.Type_Id,@Model.shopViewModel.Id)"
                                                         class="btn btn-success">
                                                    Delivery Later
                                                </budtton>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>



                            <script>
                                function SetDeliveryType(Type_Id,Store_Id){

                                    var Time="";
                                    var Date=GetCurrentDate();
                                    switch (Type_Id) {
                                        case 0:
                                            Time=GetCurrentTime($("#AsapTime").val());
                                            break;
                                        case 1:
                                            Time=$("#timepicker1").val();
                                            break;
                                        case 2:
                                            Date=$("#datetimepicker > input").val();
                                            Time=$("#timepicker2").val();
                                            break;
                                        default:
                                            break;
                                    }
                                    var OrderDateTime=Date+" "+Time;

                                    var data = {
                                        Type_Id: Type_Id,
                                        OrderDateTime:OrderDateTime,
                                        Store_Id:Store_Id
                                    }
                                    $.post("@Url.Action("AddDeliveryTimeToStore", "Order")", data,
                                    function (e) {

                                        @*$('#OrderItems').load('@Url.Action("OrderItems","Order")')*@
                                        var url= '@Url.Action("OrderItems", "Order", new { area = "User", MinOrder = Model.shopViewModel.MinOrderPrice, CurrentStoreId = Model.shopViewModel.Id })';
                                        url=url.replace("&amp;","&");
                                        $('#OrderItems').load(url);
                                        //e.preventDefault();
                                    });


                                    $('#myModal').modal('hide');
                                    $("#IsTypeSet").val("true");
                                    $(".addCart[ProductId='"+$("#HiddenProductId").val()+"']").click();
                                }


                            </script>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>

</div>

<script>

    function ReviewSuccess(data){

        $("#review_message").show();
        if(data==0){
            $("#review_message").css("color","green");
            $("#review_message").text("Review Submitted Successfully.");
        }else{
            $("#review_message").css("color","red");
            $("#review_message").text("You already review this store.");
        }
    }
    function login_error(){
        $("#review_message").css("color","red");
        $("#review_message").text("Please login to submit review.");
        $("#review_message").show();
        $('#review_message').delay(3000).fadeOut();
    }

    function fillStar(id){

        var index=parseInt(id);
        var valueOfRating=index+1;
        $("#Rating").val(valueOfRating);
        for(var i=0;i<5;i++){
            if(i<=index){
                if($("#"+i).hasClass("fa-star") && index==0){
                    $("#"+i).removeClass("fa-star");
                    $("#"+i).addClass("fa-star-o");
                    $("#Rating").val("0");
                }else{
                    $("#"+i).removeClass("fa-star-o");
                    $("#"+i).addClass("fa-star");
                }
            }else{

                if($("#"+i).hasClass("fa-star")){
                    $("#"+i).removeClass("fa-star");
                    $("#"+i).addClass("fa-star-o");
                }

            }
        }

    }

</script>
<script>

    var BusinessName="@Model.shopViewModel.BusinessName";
    var BusinessImage="@Model.shopViewModel.ImageUrl";
    var PointerLoc= {lat: @Model.shopViewModel.Latitude, lng:@Model.shopViewModel.Latitude};
    BusinessImage=encodeURI(BusinessImage);
    $('#info-tab').on('click',function(){
        initMap();
        $("#map").click();
    });

    function initMap() {
        var myLatLng = PointerLoc;

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: myLatLng
        });

        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map

        });
    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBsTtPvdkmkD6v7vu9QRzrTEPXwdsLDu3Y&libraries=places">
</script>
<script>
    $(document).ready(function () {
        $("ul#categoriesList li:first a").trigger("click");
    });
</script>

@*/////TimePicker*@
<script src="~/Content/bootstrap-timepicker/jquery.timepicker.min.js"></script>
<link href="~/Content/bootstrap-timepicker/jquery.timepicker.min.css" rel="stylesheet" />
<script>
    function AddToCart(id, productName, price, size, StoreId,MinOrderPrice) {

        var TypeCount=@Model.shopViewModel.StoreDeliveryTypes.Count;
        var TypeValue=$("#IsTypeSet").val();
        if(TypeCount > 0 && TypeValue=='false'){
            $("#HiddenProductId").val(id);
            $('#myModal').modal("show");


        }else{
            var StoreName = $("#addCart").attr("storeName");
            var BusinessType = $("#addCart").attr("storeBusinessType");
            var BusinessTypeTax = $("#addCart").attr("storeBusinessTypeTax");

            //var id = $("#addCart").attr("ProductId");
            //var productName = $("#addCart").attr("ProductName");
            //var price = $("#addCart").attr("ProductPrice");
            //var size = $("#addCart").attr("ProductSize");
            //var StoreId = $("#addCart").attr("StoreId");
            //var StoreName = $("#addCart").attr("StoreMinOrder");





            var data = {
                ItemId: id,
                name: productName,
                price: price,
                type: 0,
                size: size,
                StoreId: StoreId,
                StoreName: StoreName,
                BusinessType: BusinessType,
                BusinessTypeTax: BusinessTypeTax
            }
            $.post("@Url.Action("AddToCart","Order")", data,
                function (e) {


                    var url= '@Url.Action("OrderItems", "Order", new { area = "User", MinOrder = Model.shopViewModel.MinOrderPrice, CurrentStoreId = Model.shopViewModel.Id })';
                    url=url.replace("&amp;","&");
                    $('#OrderItems').load(url);

                })

        }
    }

    function DeleteCartItem(itemId, type, StoreId,MinOrder) {
        var data = {
            ItemId: itemId,
            type: type,
            StoreId: StoreId
        }
        $.post("@Url.Action("DeleteCartItem", "Order")", data,
        function () {
            var url = '@Url.Action("OrderItems", "Order", new { area = "User", MinOrder = Model.shopViewModel.MinOrderPrice,CurrentStoreId=Model.shopViewModel.Id})';
            url = url.replace("&amp;", "&");
            $('#OrderItems').load(url);
        })

    }

    function Cart() {


        var url = '@Url.Action("CartWithData", "Order")';
        $('#Cart').load(url);

        $("#OrderItems").fadeOut();
        $("#Cart").fadeIn();
    }


    $(function () {

        var CurrentDate=new Date();
        var AddedDate=new Date();
        $('#datetimepicker').datetimepicker({
            format: 'YYYY/MM/DD',
            allowInputToggle: true,
            defaultDate:CurrentDate,
            minDate:CurrentDate,
            maxDate:AddedDate.setDate(AddedDate.getDate() + 4)
               

        });
    });
    function ShowDeliveryOptions(DivId){

        $("#Id_0").hide();
        $("#Id_1").hide();
        $("#Id_2").hide();
        $('#Id_'+$("#"+DivId).data('type_id')).show();

    }


    $('.open-timepicker').click(function (event) {
        event.preventDefault();
        $('#timepicker').click();
    });
    $('#timepicker1').timepicker({ minTime:'@Model.shopViewModel.Open_From.Value.TimeOfDay' ,maxTime:'@Model.shopViewModel.Open_To.Value.TimeOfDay',defaultTime:'@Model.shopViewModel.Open_From'});
    $('#timepicker2').timepicker({ minTime:'@Model.shopViewModel.Open_From.Value.TimeOfDay' ,maxTime:'@Model.shopViewModel.Open_To.Value.TimeOfDay',defaultTime:'@Model.shopViewModel.Open_From'});

</script>