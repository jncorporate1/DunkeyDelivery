@model DunkeyDelivery.Areas.User.Models.AlcoholViewModel
@{
    ViewBag.Title = "Alcohol Store";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<div class="top-banner product-detail-banner">
    <img src="~/Content/assets/images/alcohol-detail-banner.jpg" class="img img-responsive" />
    <div class="banner-inner-text" />
    <img src="@DunkeyDelivery.Utility.BaseUrl@Model.storeViewModel.ImageUrl" class="logo-img common-logo-height" />
    <div class="row">
        @for (var i = 1; i <= 5; i++)
        {
            if (Model.storeViewModel.AverageRating == 0)
            {
                <span><i class="icon fa fa fa-star-o"></i></span>}
            else if (i - Model.storeViewModel.AverageRating <= 0)
            {
                <span><i class="icon fa fa-star"></i></span>    // rating
            }
            else if (i - Model.storeViewModel.AverageRating < 1)
            {
                <span><i class="icon fa fa-star-half-full"></i></span>    // half rating
            }
            else
            {
                <span><i class="icon fa fa-star-o"></i></span>    // no rating
            }
        }
    </div>
    <h1 class="product-heading-banner">@Model.storeViewModel.BusinessName</h1>

    <p class="banner-inner-data">@Model.storeViewModel.Address</p>
    <p class="banner-inner-data">Min $ @Model.storeViewModel.MinOrderPrice  |  Estimated time @Model.storeViewModel.MinDeliveryTime min</p>
</div>
</div>
<div class="current-menu-paths">
    <div class="container">
        <p> Home > Restaurants   > @Model.storeViewModel.BusinessName </p>
    </div>
</div>

<div class="main-section product-detail-main alcohol-details-main">

    <div class="container">
        <div class="row">
            <div class="col-md-9" style="margin-top: 30px;padding-bottom: 30px;">
                <ul class="tabs-list clearfix">
                    <li>
                        <button class="tab-btn tablinks" onclick="openCity(event, 'London')" id="defaultOpen">Menu</button>
                    </li>
                    <li>
                        <button class="tab-btn tablinks" onclick="openCity(event, 'paris')">Reviews</button>
                    </li>
                    <li>
                        <button class="tab-btn tablinks" id="info-tab" onclick="openCity(event, 'newyork')">Info</button>
                    </li>
                </ul>


                <div class="tab1 tabcontent" id="London">
                    <div class="quick-search clearfix">
                        <form style="border: 1px solid #666666;">
                            <input type="text" onkeyup="SearchAlcoholProducts(this.value,@Model.storeViewModel.Id)" placeholder="Quick search" />
                            <input type="submit" onclick="return false;" />
                        </form>
                    </div>

                    <div class="row" id="category">
            
                        @{
                            Html.RenderAction("StoreCategories", "Alcohol", new { area = "User",Model.categoryViewModel });
                        }
                    </div>
                </div>
                <div class="tab1 tabcontent" id="paris">
                    <div class="reviews-main clearfix reviews-tab">
                        <h4>Reviews</h4>

                        @if (Model.ReviewForView.Reviews.Count == 0)
                        {
                            <p class="based-on">
                                There are no reviews yet
                            </p>
                        }
                        else
                        {
                            foreach (var review in Model.ReviewForView.Reviews)
                            {
                                <div class="row review-row">
                                    <p><i>@review.User.FullName</i></p>
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <span><i class="icon fa fa-star custom-size"></i></span>

                                        }
                                        else
                                        {
                                            <span><i class="icon fa fa-star-o custom-size"></i></span>
                                        }
                                    }
                                    <p class="review-feedback">@review.Feedback</p>
                                </div>
                            }

                        }

                        <div class="row" style="padding-left: 29px;margin-top: 27px !important;">
                            <h3 style="padding: 10px 0px;">Write a review</h3>
                            <label class="zama-label">Rating</label>
                            <span><i class="icon fa fa-star-o custom-size" id="0" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="1" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="2" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="3" onclick="fillStar(this.id)"></i></span>
                            <span><i class="icon fa fa-star-o custom-size" id="4" onclick="fillStar(this.id)"></i></span>
                            <br /><br />
                            @using (Ajax.BeginForm("SubmitReview", "UserStore", new AjaxOptions { OnSuccess = "ReviewSuccess", OnFailure = "ReviewFailed" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="text" name="UserReview.User_Id" value="@Model.Id" hidden />
                                <input type="text" name="UserReview.Store_Id" value="@Model.storeViewModel.Id" hidden />
                                <input type="text" name="UserReview.Rating" id="Rating" value="" hidden />
                                <label class="zama-label" style="margin-bottom:5px;">Your Review</label>
                                <textarea class="form-control" name="UserReview.Feedback" id="reviewArea"></textarea>
                                if (Model.Id != null)
                                {
                                    <input type="submit" class="btn btn-primary" value="Submit" style="float: right;margin-top: 10px;" />
                                }
                                else
                                {
                                    <input type="button" class="btn btn-primary" onclick="login_error()" value="Submit" style="float: right;margin-top: 10px;" />

                                }

                            }
                            <p style="display:none;" id="review_message"></p>
                        </div>
                        <ul>
                            @*<li>
                        <img src="~/Content/assets/images/rating.png" />
                        <p>
                            By: Yisroel H on Jan 5, 2017 | 1 review written | 1 order placed<br>
                            The Quality here outdid any of my local butchers. The meat was fresh, juicy, and so
                            tasty it literally blew me away.
                        </p>
                    </li>*@

                        </ul>
                    </div>
                </div>
                <div class="tab1 tabcontent" id="newyork">
                    <div class="location-info clearfix">
                        <h3 style="padding:0 0 23px !important;">
                            @Model.storeViewModel.Address
                        </h3>
                        <div id="map"></div>


                    </div>

                    <div class="time-info clearfix" style="background-color:#FFF;">
                        <div class="col-md-12 nopadleft">
                            <h3>Delivery hours</h3>
                            <ul>
                                @if (Model.storeViewModel.StoreDeliveryHours!=null)
                                {


                                        <li> <div class="left">Mon @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Monday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Monday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Tue @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Tuesday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Tuesday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Wed @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Wednesday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Wednesday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Thu @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Thursday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Thursday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Fri @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Friday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Friday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Sat @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Saturday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Saturday_To.ToString(@"hh\:mm")</div></li>
                                        <li> <div class="left">Sun @DateTime.Now.ToString("dd/MM") </div>      <div class="right">@Model.storeViewModel.StoreDeliveryHours.Sunday_From.ToString(@"hh\:mm")  - @Model.storeViewModel.StoreDeliveryHours.Sunday_To.ToString(@"hh\:mm")</div></li>

                                    
                                }
                                else
                                {

                                    <li> Delivery Time Not Available</li>
                                }


                            </ul>

                        </div>
                    </div>
                </div>



            </div>
            <div class="col-md-3" id="OrderItems">

                @{

                    Html.RenderAction("OrderItems", "Order", new { area = "User", MinOrder=Model.storeViewModel.MinOrderPrice });
                }
            </div>
            <div class="col-md-3" id="Cart" style="display:none">
                @{
                    Html.RenderAction("DeliveryTime", "Order", new { area = "User" });
                }

                @{
                    Html.RenderAction("Cart", "Order", new { area = "User" });
                }
            </div>
        </div>


    </div>

</div>

<script>

        var BusinessName="@Model.storeViewModel.BusinessName";
        var BusinessImage="@Model.storeViewModel.ImageUrl";
        var PointerLoc= {lat: @Model.storeViewModel.Latitude, lng:@Model.storeViewModel.Latitude};
        BusinessImage=encodeURI(BusinessImage);
        $('#info-tab').on('click',function(){
            initMap();
            $("#map").click();
        });

        function initMap() {
            var myLatLng = PointerLoc;

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: myLatLng
            });

            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map

            });
        }

</script>


<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBsTtPvdkmkD6v7vu9QRzrTEPXwdsLDu3Y&libraries=places&callback=initMap">
</script>

<script>
        function ReviewSuccess(data){

            $("#review_message").show();
            if(data==0){
                $("#review_message").css("color","green");
                $("#review_message").text("Review Submitted Successfully.");
            }else{
                $("#review_message").css("color","red");
                $("#review_message").text("You already review this store.");
            }
        }
        function login_error(){
            $("#review_message").css("color","red");
            $("#review_message").text("Please login to submit review.");
            $("#review_message").show();
            $('#review_message').delay(3000).fadeOut();
        }

        function fillStar(id){

            var index=parseInt(id);
            var valueOfRating=index+1;
            $("#Rating").val(valueOfRating);
            for(var i=0;i<5;i++){
                if(i<=index){
                    if($("#"+i).hasClass("fa-star") && index==0){
                        $("#"+i).removeClass("fa-star");
                        $("#"+i).addClass("fa-star-o");
                        $("#Rating").val("0");
                    }else{
                        $("#"+i).removeClass("fa-star-o");
                        $("#"+i).addClass("fa-star");
                    }
                }else{

                    if($("#"+i).hasClass("fa-star")){
                        $("#"+i).removeClass("fa-star");
                        $("#"+i).addClass("fa-star-o");
                    }

                }
            }

        }

        //function emptyStar(id){
        //    $("#"+id).addClass("fa-star-o");
        //    $("#"+id).removeClass("fa-star");
        //}

        //$(document).ready(function () {
        //    $("ul#categoriesList li:first a").trigger("click");
        //});


</script>
<script>



    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";


    }
    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();


    function GetSubCategories(Category_id) {
        Name = $("#" + Category_id + "").attr("CategoryName");
        var data = {
            Category_id: Category_id,
            Name: Name,
            Store_id:@Model.storeViewModel.Id,

        }

        $.post("@Url.Action("SubCategories", "Alcohol", new { area = "User" })", data,
        function (response) {
            @*$('#category').load('@Url.Action("OrderItems", "Order", new { area = "User", MinOrder = Model.MinOrder })')*@
             
            $("#category").html(response);
        })

    }


    function GetProducts(Category_id, Name) {
        var data = {
            Category_id: Category_id,
            Name:Name,

        }

        $.post("@Url.Action("GetProducts", "Alcohol", new { area = "User" })", data,
        function (response) {
            @*$('#category').load('@Url.Action("OrderItems", "Order", new { area = "User", MinOrder = Model.MinOrder })')*@
            $("#category").html(response);
        })

    }

    function SearchAlcoholProducts(searchFieldValue,store_id) {
        
        if (searchFieldValue.length > 2 || searchFieldValue.length == 0) {

            $.ajax({
               
                url: '@Url.Action("SearchByName", "Alcohol",new { Area = "User" })',
                type: "GET",
                data: { search_string: searchFieldValue, CategoryType: "Alcohol",Store_Id:store_id },
                success: function (data) {

                    $('#category').html(data);
                }, error: function (xhr, status, error) {

                }
            });
        }
    }
</script>