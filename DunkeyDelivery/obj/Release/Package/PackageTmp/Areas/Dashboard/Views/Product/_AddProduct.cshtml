@model DunkeyDelivery.Areas.Dashboard.Models.AddProductViewModel

@using (Ajax.BeginForm("Create", "Product", new AjaxOptions { OnSuccess = "OnSuccessInsertion", OnFailure = "OnFailedInsertion" }, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
            <label>Product Name</label>
            <input type="text" name="Name" id="Name" placeholder="Product Name" data-val="true" class="form-control input-validation-error" data-val-required="Product Name is required" value="@Model.Name">
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger error" })

        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
            <label>Product Price</label>
            <input type="text" name="Price" placeholder="Product Price" data-val="true" id="preventAlphabet" class="form-control input-validation-error" data-val-required="Product Price is required" value="@Model.Price">
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger error" })

        </div>
    </div>
    <div class="row">
        <div class="col-md-6 col-xs-6">
            <label>Store Name</label>
            @Html.DropDownList("Store_Id", new SelectList(Model.StoreOptions.Items,
       "value", "Text", Model.StoreOptions.SelectedValue), new { @class = "form-control", onchange = "AddProduct_OnStoreChange()" })
            @Html.ValidationMessageFor(m => m.Store_Id, "", new { @class = "text-danger error" })
        </div>

        <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
            <label>Product Category</label>
            @Html.DropDownList("Category_Id", new SelectList(Model.CategoryOptions.Items,
                                     "value", "Text", Model.CategoryOptions.SelectedValue), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Category_Id, "", new { @class = "text-danger error" })

        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-12">
            <!-- image-preview-filename input [CUT FROM HERE]-->
            <label>Upload Product Image</label>
            <div class="input-group image-preview">
                <input type="text" class="form-control image-preview-filename" id="filenamedisplay" disabled="disabled"> <!-- don't give a name === doesn't send on POST/GET -->
                <span class="input-group-btn">
                    <!-- image-preview-clear button -->
                    <button type="button" class="btn btn-default image-preview-clear" id="clearImage" style="display:none;">
                        <span class="glyphicon glyphicon-remove"></span> Clear
                    </button>
                    <!-- image-preview-input -->
                    <div class="btn btn-default image-preview-input">
                        <span class="glyphicon glyphicon-folder-open"></span>
                        <span class="image-preview-input-title">Browse</span>
                        <input type="file" accept="image/png, image/jpeg, image/gif" onchange="UploadImage()" id="fileInput" name="Image" /> <!-- rename it -->
                    </div>
                </span>

            </div><!-- /input-group image-preview [TO HERE]-->
            <span style="color:red;" id="InvalidImageError"> </span>
            @Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger error" })

        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12 form-group has-feedback">
            <label>Product Description</label>
            <textarea type="text" class="form-control" name="Description" id="ProductDescription" placeholder="Product Description"></textarea>
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger error" })
        </div>
    </div>

        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-12 col-sm-12 col-xs-12 text-right">
                <button class="btn btn-primary" onclick="clear_errors()" type="reset">Reset</button>
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        </div>
        }
        <br>
        <div class="form-group">
            <div class="alert alert-success" id="success-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Success! </strong> <span> </span>
            </div>

            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong> <span> </span>
            </div>

        </div>

        <script>
            function OnResetClick() {
                $("#clearImage").trigger("click");
            }

            function OnSuccessProductInsertion() {
                //$("#success-alert").append("Store updated successfully.");
                $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                    $("#success-alert").slideUp(500);
                });
                $("#ProductName").val('');
                $("#preventAlphabet").val('');
                $("#CatId").val('0');
                $("#clearImage").trigger("click");
            }

            function UploadImage() {
                var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
                var formdata = new FormData(); //FormData object
                var fileInput = document.getElementById('fileInput');
                //Iterating through each files selected in fileInput
                var file = fileInput.files[0];
                //for (i = 0; i < fileInput.files.length; i++) {
                //    //Appending each file to FormData object
                //    formdata.append(fileInput.files[i].name, fileInput.files[i]);
                //}
                formdata.append(file.name, file);
                if (AllowedFileTypes.indexOf(file.type) == -1) {
                    $("#ImageError").text("Only .Jpeg & .Png files are allowed.");
                    $("#clearImage").trigger("click");
                    return false;
                }
                else {
                    $("#ImageError").text("");
                    //Creating an XMLHttpRequest and sending
                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', 'Product/UploadImage');
                    xhr.send(formdata);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {
                            //alert(xhr.responseText);
                        }
                    }
                    return false;
                }
            }

            function ClearImage() {
                var xhr = new XMLHttpRequest();
                xhr.open('POST', 'Product/DeleteImage');
                xhr.send("Clear");
            }

        </script>



